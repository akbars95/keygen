<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager"/>
    <context:annotation-config/>

    <context:component-scan base-package="com.mtsmda.keygen.desktop"/>
    <!--<context:component-scan base-package="com.mtsmda.souvenir.spring.stereotype,com.mtsmda.souvenir.spring.validation" />-->
    <!-- add resources -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- freemarker config -->
    <!--<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/ftl/"/>
    </bean>-->

    <!--
	  View resolvers can also be configured with ResourceBundles or XML files. If you need
	  different view resolving based on Locale, you have to use the resource bundle resolver.
	-->
    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
    </bean>-->

    <!-- Total customization - see below for explanation. -->
    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <!--<property name="favorParameter" value="true"/>
        <property name="parameterName" value="mediaType"/>-->
        <!--<property name="ignoreAcceptHeader" value="true"/>-->
        <!--<property name="useJaf" value="false"/>-->
        <property name="defaultContentType" value="application/json"/>

        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
                <entry key="csv" value="text/csv"/>
                <entry key="stream" value="application/octet-stream"/>
                <!--<entry key="txml" value="text/xml"/>-->
            </map>
        </property>
    </bean>

    <!--<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />

    <bean id="xmlViewer"
          class="org.springframework.web.servlet.view.xml.MarshallingView">
        <constructor-arg>
            <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
                <property name="classesToBeBound">
                    <list>
                        <value>com.mtsmda.keygen.desktop.model.User</value>
                        <value>com.mtsmda.keygen.desktop.model.UserRequest</value>
                        <value>com.mtsmda.keygen.desktop.model.UserKey</value>
                    </list>
                </property>
            </bean>
        </constructor-arg>
    </bean>-->


    <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/rest/sendmessage"/>
            <bean class="com.mtsmda.live_site.site.interceptor.SendMessageInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/*"/>
            <mvc:exclude-mapping path="/rest/sendmessage"/>
            <bean class="com.mtsmda.live_site.site.interceptor.SessionIdInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->


    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
        in the /WEB-INF/views directory -->
    <!--<bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property columnName="basename" value="classpath:messages" />
        <property columnName="defaultEncoding" value="UTF-8" />
    </bean>

    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property columnName="defaultLocale" value="en" />
    </bean>

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property columnName="paramName" value="lang" />
        </bean>
    </mvc:interceptors>-->

    <!-- Tiles configuration -->

    <!--<bean id="tilesConfigurer"-->
    <!--class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">-->
    <!--<property name="definitions">-->
    <!--<list>-->
    <!--<value>/WEB-INF/tiles/tiles-definitions.xml</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->


</beans>